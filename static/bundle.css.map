{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte",
    "../Tables.svelte",
    "../Table.svelte",
    "../Navbar.svelte",
    "../Tags.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Layout from \"./Layout.svelte\"\n\timport Table from \"./Table.svelte\"\n\timport Tables from \"./Tables.svelte\"\n\n\texport let sel, table_id;\n</script>\n\n<Layout>\n\t<main>\n\t{#if sel == \"table\"}\n\t\t<Table {table_id} />\n\t{:else if sel == \"tables\"}\n\t\t<Tables />\n\t{:else}\n\t\t<h1>Hello! Try navigating to discover data!</h1>\n\t{/if}\n\t</main>\n</Layout>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 80vw;\n\t\tmargin: 0 auto;\n\t\theight: 90%;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\ttext-transform: uppercase;\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (max-width: 800px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n</style>",
    "<script>\n    import { tables } from \"./stores.js\"\n\n    import { onMount } from \"svelte\"\n\n    const get_tables_metadata = async () => {\n        const response = await fetch(`/tables.json`).then(resp => resp.json())\n        tables.set(response)\n    }\n\n    onMount(() => {\n        get_tables_metadata()\n    })\n</script>\n\n<svelte:head>\n\t<title>Altitude: Discover</title>\n</svelte:head>\n\n<div class=\"panel\">\n\t<p class=\"panel-heading\">Tables</p>\n    <div class=\"panel-block\">\n        <p class=\"control has-icons-left\">\n        <input class=\"input\" type=\"text\" placeholder=\"Search\">\n        <span class=\"icon is-left\">\n            <i class=\"fas fa-search\" aria-hidden=\"true\"></i>\n        </span>\n        </p>\n    </div>\n    <div class=\"panel-block description\">\n        <h3>Most popular tables matching your search</h3>\n    </div>\n\t<div class=\"full-height column\">\n        <p class=\"subtitle\">Tables</p>\n        {#each $tables as table}\n            <a href=\"/tables/{table.schemaname}.{table.tablename}\">\n                <div class=\"level table\">\n                    {table.schemaname}.{table.tablename}\n                </div>\n            </a>\n        {/each}\n\t</div>\n\t<div class=\"level\"></div> \n</div>\n\n<style>\n\n.table {\n    padding: 10px;\n    margin-bottom: 0px;\n    text-decoration: none;\n}\n\n.table:hover {\n    background-color: #00c4a7;\n    color: white;\n}\n\n.description {\n    color: grey;\n}\n\n.panel {\n    height: 100%;\n}\n</style>\n",
    "<script>\n\timport { table } from \"./stores.js\"\n\n    export let table_id;\n\n\tlet loaded = false\n\tlet modal_column\n    \n\timport { onMount } from \"svelte\"\n\timport ColumnModal from \"./components/ColumnModal.svelte\"\n\timport Description from \"./components/Description.svelte\"\n\timport Tags from \"./components/Tags.svelte\"\n\n    const get_table_metadata = async (table_id) => {\n        const response = await fetch(`/tables/${table_id}.json`).then(resp => resp.json())\n\t\ttable.set(response)\n\t\tloaded = true\n\t}\n\n    onMount(() => {\n        get_table_metadata(table_id)\n\t})\n\n</script>\n\n<svelte:head>\n\t<title>Altitude: {$table.name || 'Table'}</title>\n</svelte:head>\n\n<div class=\"panel is-primary\">\n\t{#if loaded}\n\t\t<p class=\"panel-heading\">{$table.schemaname}.{$table.tablename}</p>\n\t\t\n\t\t<div class=\"column\">\n\t\t\t<p class=\"heading\">description</p>\n\t\t\t<Description column={undefined}/>\n\t\t</div>\n\t\t<div>\n\t\t\t{#each ($table.columns || []) as column}\n\t\t\t\t<div class=\"columns\">\n\t\t\t\t\t<p class=\"column is-one-fifth cell\">{column.column_name}</p>\n\t\t\t\t\t<p class=\"column is-one-fifth cell\">{column.column_type}</p>\n\t\t\t\t\t<p class=\"column is-one-fifth cell\"><Tags {column}/></p>\n\t\t\t\t\t<p class=\"column cell\"><Description {column}/></p>\n\t\t\t\t</div>\n\t\t\t{/each}\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\n.cell {\n\tmargin: 1em;\n\toverflow: scroll;\n\ttext-align: left;\n}\n</style>\n",
    "\n<nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"navbar-brand\">\n        <span class=\"icon is-large\">\n            <ion-icon name=\"airplane-outline\"></ion-icon>\n        </span>\n\n\n    <a href=\"#\" role=\"button\" class=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n    </a>\n  </div>\n\n  <div id=\"navbarBasicExample\" class=\"navbar-menu\">\n    <div class=\"navbar-start\">\n      <a href=\"/\" class=\"navbar-item\">\n        Home\n      </a>\n\n      <a href=\"/tables\" class=\"navbar-item\">\n        Tables\n      </a>\n    </div>\n\n    <div class=\"navbar-end\">\n      <div class=\"navbar-item\">\n        <div class=\"buttons\">\n          <!-- <a href=\"\" class=\"button is-primary\">\n            <strong>Sign up</strong>\n          </a>\n          <a href=\"\" class=\"button is-light\">\n            Log in\n          </a> -->\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>\n\n<style>\n.logo {\n  text-transform: uppercase;\n  color: #FF8D8A;\n}\n\na {\n  text-decoration: none;\n}\n</style>",
    "<script>\nimport _ from \"lodash\"\nimport { table } from \"../stores.js\"\nexport let column\n\nlet mode = 'view'\nlet tags = (column ? column.tags : $table.tags) || []\nlet new_tag;\n\n\nlet saveTags = () => {\n    // todo there must be a cleaner way to do this\n    console.log(tags)\n    if (column){\n        let columns = $table.columns\n        columns.forEach((c) => {\n            if (c.column_name == column.column_name) {\n                c.tags = (c.tags || []).concat({tag: new_tag})\n            }\n        })\n        table.set({...$table, columns })\n    } else {\n        table.set({...$table, description: value })\n    }\n\n    fetch(`/tables/${$table.schemaname}.${$table.tablename}`, {\n        method: 'POST',\n        body: JSON.stringify({ table: $table })\n    }).then(() => {\n        mode = 'view'\n        tags = tags.concat({tag: new_tag})\n        new_tag = undefined\n    })\n}\n\nlet editMode = () => {\n    mode = 'edit'\n    // enable keyboard shortcuts #todo\n}\n\nfunction deleteTag(i) {\n    return () => {\n        let filtered_tags = _.clone(tags)\n        filtered_tags.splice(i, 1)\n        if (column){\n            let columns = $table.columns\n            columns.forEach((c) => {\n                if (c.column_name == column.column_name){\n                    c.tags = filtered_tags\n                }\n            })\n            table.set({...$table, columns })\n        } else {\n            table.set({...$table, description: value })\n        }\n\n        fetch(`/tables/${$table.schemaname}.${$table.tablename}`, {\n            method: 'POST',\n            body: JSON.stringify({ table: $table })\n        }).then(() => {\n            tags = filtered_tags\n            mode = 'view'\n        })\n    }\n}\n\n</script>\n\n<!-- svelte-ignore a11y-missing-attribute\n                   a11y-autofocus -->\n<div>\n    {#each (tags || []) as tag, i}\n        <div class=\"tag\">\n            <p>{tag.tag}</p>\n            <a href=\"javascript:;\" on:click={deleteTag(i)} class=\"delete is-small\"></a>\n        </div>\n    {/each}\n    {#if mode == 'edit'}\n        <input bind:value={new_tag} autofocus placeholder=\"Add a new tag\">\n        <button on:click={saveTags} class=\"button\">save</button>\n    {:else}\n        <span on:click={editMode} class=\"icon is-medium\">\n            <ion-icon name=\"pencil-outline\"></ion-icon>\n        </span>\n    {/if}\n</div>\n\n<style>\n.tag {\n    background-color: #eee;\n}\n\nion-icon:hover {\n    cursor: pointer;\n}\n</style>\n"
  ],
  "names": [],
  "mappings": "AAqBC,IAAI,cAAC,CAAC,AACL,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,IAAI,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,MAAM,CAAE,GAAG,AACZ,CAAC,AAED,EAAE,cAAC,CAAC,AACH,KAAK,CAAE,OAAO,CACd,cAAc,CAAE,SAAS,CACzB,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AACjB,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AAC1B,IAAI,cAAC,CAAC,AACL,SAAS,CAAE,IAAI,AAChB,CAAC,AACF,CAAC;ACOF,MAAM,cAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,aAAa,CAAE,GAAG,CAClB,eAAe,CAAE,IAAI,AACzB,CAAC,AAED,oBAAM,MAAM,AAAC,CAAC,AACV,gBAAgB,CAAE,OAAO,CACzB,KAAK,CAAE,KAAK,AAChB,CAAC,AAED,YAAY,cAAC,CAAC,AACV,KAAK,CAAE,IAAI,AACf,CAAC,AAED,MAAM,cAAC,CAAC,AACJ,MAAM,CAAE,IAAI,AAChB,CAAC;ACZD,KAAK,cAAC,CAAC,AACN,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,IAAI,AACjB,CAAC;ACTD,CAAC,eAAC,CAAC,AACD,eAAe,CAAE,IAAI,AACvB,CAAC;ACuCD,IAAI,eAAC,CAAC,AACF,gBAAgB,CAAE,IAAI,AAC1B,CAAC,AAED,uBAAQ,MAAM,AAAC,CAAC,AACZ,MAAM,CAAE,OAAO,AACnB,CAAC"
}